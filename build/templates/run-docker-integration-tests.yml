steps:
  - template: start-docker-project.yml
    parameters:
      dockerProjectName: '$(Project).Tests.Runtimes.AzureFunction'
      port: '$(Arcus.AzureFunctions.InProcess.HttpPort)'
      envVars: |
        APPINSIGHTS_INSTRUMENTATIONKEY=$(Arcus.ApplicationInsights.InstrumentationKey)
  - template: start-docker-project.yml
    parameters:
      dockerProjectName: '$(Project).Tests.Runtimes.AzureFunction.Isolated'
      port: '$(Arcus.AzureFunctions.Isolated.HttpPort)'
      envVars: |
        APPINSIGHTS_INSTRUMENTATIONKEY=$(Arcus.ApplicationInsights.InstrumentationKey)
  - template: test/run-integration-tests.yml@templates
    parameters:
      dotnetSdkVersion: '$(DotNet.Sdk.Version)'
      projectName: '$(Project).Tests.Integration'
      category: 'Docker'
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        docker logs $(Project).Tests.Runtimes.AzureFunction
      failOnStderr: true
    displayName: Show $(Project).Tests.Runtimes.AzureFunction logs
    condition: always()
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        docker logs $(Project).Tests.Runtimes.AzureFunction.Isolated
      failOnStderr: true
    displayName: Show $(Project).Tests.Runtimes.AzureFunction.Isolated logs
    condition: always()