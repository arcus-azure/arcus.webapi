steps:
  - task: UseDotNet@2
    displayName: 'Import .NET Core SDK ($(DotNet.Sdk.Version))'
    inputs:
      packageType: 'sdk'
      version: '$(DotNet.Sdk.Version)'
      includePreviewVersions: $(DotNet.Sdk.IncludePreviewVersions)
  # .NET 8 not available yet for Azure Functions in-process
  # - template: start-docker-project.yml
  #   parameters:
  #     dockerProjectName: '$(Project).Tests.Runtimes.AzureFunction'
  #     port: '$(Arcus.AzureFunctions.InProcess.HttpPort)'
  - template: start-docker-project.yml
    parameters:
      dockerProjectName: '$(Project).Tests.Runtimes.AzureFunction.Isolated'
      port: '$(Arcus.AzureFunctions.Isolated.HttpPort)'
  - template: test/run-integration-tests.yml@templates
    parameters:
      dotnetSdkVersion: '$(DotNet.Sdk.Version)'
      includePreviewVersions: $(DotNet.Sdk.IncludePreviewVersions)
      projectName: '$(Project).Tests.Integration'
      category: 'Docker'
  # .NET 8 not available yet for Azure Functions in-process
  # - task: Bash@3
  #   inputs:
  #     targetType: 'inline'
  #     script: |
  #       docker logs $(Project).Tests.Runtimes.AzureFunction
  #     failOnStderr: true
  #   displayName: Show $(Project).Tests.Runtimes.AzureFunction logs
  #   condition: always()
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        docker logs $(Project).Tests.Runtimes.AzureFunction.Isolated
      failOnStderr: true
    displayName: Show $(Project).Tests.Runtimes.AzureFunction.Isolated logs
    condition: always()