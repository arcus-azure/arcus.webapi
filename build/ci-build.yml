name: $(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - src/*

pr:
  paths:
    include:
      - src/*
      - build/ci-build.yml

resources:
  repositories:
    - repository: templates
      type: github
      name: arcus-azure/azure-devops-templates
      endpoint: arcus-azure

variables:
  - group: 'Arcus - GitHub Package Registry'
  - group: 'Build Configuration'
  - name: 'Project'
    value: 'Arcus.WebApi'
  # 'Package.Version.ManualTrigger' is added as queue-time variable on build in Azure DevOps

stages:
  - stage: Build
    jobs:
      - job: Compile
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - template: 'nuget/determine-pr-version.yml@templates'
            parameters:
              manualTriggerVersion: $(Package.Version.ManualTrigger)
          - task: DotNetCoreInstaller@0
            displayName: 'Import .NET Core SDK (3.0.101)'
            inputs:
              version: '3.0.101'
          - template: 'build/build-solution.yml@templates'
            parameters:
              dotnetSdkVersion: '3.0.101'
              versionSuffix: '$(packageVersion)'
          - task: CopyFiles@2
            displayName: 'Copy build artifacts'
            inputs:
              contents: '**/?(bin|obj)/**'
              targetFolder: '$(Pipeline.Workspace)/build'
          - task: PublishPipelineArtifact@0
            displayName: 'Publish build artifacts'
            inputs:
              targetPath: '$(Pipeline.Workspace)/build'
              artifactName: 'Build'

  - stage: UnitTests
    displayName: Unit Tests
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: UnitTests
        displayName: 'Run unit tests'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: UseDotNet@2
            displayName: 'Import .NET Core SDK (2.2.105)'
            inputs:
              packageType: 'sdk'
              version: '2.2.105'
          - task: UseDotNet@2
            displayName: 'Import .NET Core SDK (3.0.101)'
            inputs:
              packageType: 'sdk'
              version: '3.0.101'
          - task: DotNetCoreCLI@2
            displayName: 'Run unit tests'
            inputs:
              command: test
              projects: 'src/**/$(Project).Unit.csproj'
              arguments: '--configuration $(Build.Configuration)'
              nobuild: true
              publishTestResults: true

  - stage: ReleaseToMyget
    displayName: 'Release to MyGet'
    dependsOn: UnitTests
    condition: succeeded()
    jobs:
      - job: PushToMyGet
        displayName: 'Push to MyGet'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
          - template: nuget/publish-preview-package.yml@templates
